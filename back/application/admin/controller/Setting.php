<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/21
 * Time: 16:21
 */
namespace app\admin\controller;


//设置类
use app\common\model\Admin as AdminModel;
use app\common\model\Member;
use think\Lang;
use think\Request;

class Setting extends Adminbase{
    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    //修改密码面板
    function password() {
        if (!$this->request->isPost()) {
            return $this->view->fetch();
        } else {
            $old_password = $this->request->post('oldPassword');
            if (!$old_password) {
                $this->error(lang('old_password_not_null'));
            }

            $new_password = $this->request->post('password');
            if (!$new_password) {
                $this->error(lang('new_password_not_null'));
            }

            $confirm_password =$this->request->post('repassword');
            if (!$confirm_password) {
                $this->error(lang('conform_password_not_null'));
            }

            $adminid = $this->getUserid();
            $admin = AdminModel::get($adminid);

            $_password = $admin->password;
            $_salt = $admin->salt;

            if ($new_password !== $confirm_password) {
                $this->error(lang('confirm_not_equal_new'));
            }


            if ($_password !== md5($old_password.$_salt)) {
                $this->error(lang('old_password_error'));
            }

            if ($old_password === $new_password) {
                $this->error(lang('old_can_not_equal_new'));
            }

            $admin->password     = $new_password;
            if (false !== $admin->save()) {
                $this->success(lang('success'));
            } else {
                $this->error(lang('error'));
            }
        }
    }

    function base() {
        $config_model = model('config');
        if ($this->request->isPost()) {
            $update_array['site_name'] = input('post.site_name', '', 'trim');
            $update_array['site_logo'] = input('post.site_logo', '', 'trim');
            $update_array['icp_number'] = input('post.icp_number', '', 'trim');
            $update_array['site_phone'] = input('post.site_phone', '', 'trim');
            $update_array['site_tel400'] = input('post.site_tel400', '', 'trim');
            $update_array['site_email'] = input('post.site_email', '', 'trim');
            $update_array['flow_static_code'] = input('post.flow_static_code', '', 'trim');
            $update_array['site_state'] = input('post.site_state', 0, 'intval');
            $result = $config_model->editConfig($update_array);
            if ($result) {
                dkcache('config');
//                $this->log(lang('ds_edit').lang('web_set'),1);
                $this->success(lang('save_success'), '');
            }else{
                $this->error(lang('save_error'), '');
//                $this->log(lang('ds_edit').lang('web_set'),0);
            }
        } else {
            $list_config = rkcache('config', true);
            $this->assign('list_config', $list_config);
            $this->setAdminCurItem('base');
            return $this->fetch();
        }
    }

    function seo() {
        $config_model = model('config');
        if ($this->request->isPost()) {
            $update_array['seo_title'] = $this->request->param('seo_title', '', 'trim');
            $update_array['seo_keywords'] = $this->request->param('seo_keywords', '', 'trim');
            $update_array['seo_description'] = $this->request->param('seo_description', '', 'trim');
            $result = $config_model->editConfig($update_array);
            if ($result) {
                dkcache('config');
//                $this->log(lang('ds_edit').lang('web_set'),1);
                $this->success(lang('save_success'), '');
            }else{
                $this->error(lang('save_error'), '');
//                $this->log(lang('ds_edit').lang('web_set'),0);
            }
        } else {
            $list_config = rkcache('config', true);
            $this->assign('list_config', $list_config);
            $this->setAdminCurItem('seo');
            return $this->fetch();
        }
    }


    /**
     *
     */
    protected function getAdminItemList($data = []) {
        $menu_array = array(
            array(
                'name' => 'base',
                'text' => lang('setting_base'),
                'url' => url('setting/base')
            ),
            array(
                'name' => 'seo',
                'text' => lang('setting_seo'),
                'url' => url('setting/seo')
            )
        );
        return $menu_array;
    }
}
