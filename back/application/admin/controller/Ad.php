<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018-11-6
 * Time: 23:16
 */
namespace app\admin\controller;

use app\common\model\Adposition;
use app\common\validate\AdValidate;
use think\facade\Lang;

class Ad extends Adminbase{
    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    function index() {
        $position_id = $this->request->param('position_id', 0, 'intval');
        if (!$this->request->isAjax()) {
            $this->assign('position_id', $position_id);
            return $this->fetch();
        } else {
            $ad_model = new \app\common\model\Ad();
            $where = [];
            if ($position_id) {
                $where = ['position_id'=>$position_id];
                $order = 'listorder asc';
            } else {
                $order = 'ad_id desc';
            }
            $paginate = $ad_model->order($order)->with('positonname')->where($where)->paginate();
            $new_list = $paginate->append(['statustext'])->toArray();
            $list = $paginate->toArray();
            $list['data'] = $new_list;
//            $list = $ad_model->order($order)->with('positonname')->where($where)->paginate()->toArray();
            $result = [];
            $result['code'] = 1;
            $result['msg'] = "";
            $result['count'] = $list['total'];
            $result['data'] = $new_list['data'];
            echo json_encode($result);
        }
    }

    function add() {
        $position_id = $this->request->param('position_id', 0, 'intval');
        $positions = Adposition::all();
        if (!$positions) {
            $this->error(lang('linl_error'));
        }

        if (!$this->request->isAjax()) {
            $this->assign('position_id', $position_id);
            $this->assign('positions', $positions);
            return $this->fetch('adds');
        } else {
            $result = AdValidate::validate($_POST);
            if ($result === true) {
                $ad_model = new \app\common\model\Ad();
                if ($ad_model->allowField(true)->save($_POST)) {

                    //日志
                    $log_msg = lang('admin_ad_add') . ',' . lang('admin_ad_title') . ':' . $ad_model->ad_title;
                    $this->log($log_msg, 0);

                    $this->success(lang('success'), url('ad/index', ['position_id'=>$position_id]));
                } else {
                    $this->error(lang('error'));
                }
            } else {
                $this->error($result);
            }
        }
    }

    function edit() {
        $position_id = $this->request->param('position_id', 0, 'intval');
        $positions = Adposition::all();
        if (!$positions) {
            $this->error(lang('linl_error'));
        }

        $ad_id = $this->request->param('ad_id', 0, 'intval');
        if (!$ad_id) {
            $this->error(lang('link_error'));
        }

        $ad = \app\common\model\Ad::get($ad_id);
        if (!$ad) {
            $this->error(lang('link_error'));
        }

        if (!$this->request->isAjax()) {
            $this->assign('position_id', $position_id);
            $this->assign('ad', $ad);
            $this->assign('positions', $positions);
            return $this->fetch();
        } else {
            $result = AdValidate::validate($_POST);
            if ($result === true) {
                if (false !== $ad->allowField(true)->save($_POST)) {
                    $this->success(lang('success'), url('ad/index', ['position_id'=>$position_id]));
                } else {
                    $this->error(lang('error'));
                }
            }  else {
                $this->error($result);
            }

        }
    }

    function del() {
        if ($this->request->isAjax()) {
            $ad_id = $this->request->param('ad_id', 0, 'intval');
            if (!$ad_id) {
                $this->error(lang('link_error'));
            }

            $ad = \app\common\model\Ad::get($ad_id);
            if (!$ad) {
                $this->error(lang('link_error'));
            }

            if ($ad->delete()) {
                $this->success(lang('success'));
            } else {
                $this->error(lang('error'));
            }
        }
    }

    function ajaxedit() {
        if ($this->request->isAjax()) {
            if ($this->request->has('status')) {
                $status = $this->request->param('status', 0, 'intval');
            }
            if ($this->request->has('listorder')) {
                $listorder = $this->request->param('listorder', 0, 'intval');
                if ($listorder < 0 || $listorder > 10000) {
                    $this->error(lang('min_max'));
                }
            }


            $ad_id = $this->request->param('ad_id', 0, 'intval');
            if (!$ad_id) {
                $this->error(lang('link_error'));
            }

            $ad = \app\common\model\Ad::get($ad_id);
            if (!$ad) {
                $this->error(lang('link_error'));
            }

            isset($listorder) && $ad->listorder = $listorder;
            isset($status) && $ad->status = $status;

            if (false !== $ad->save()) {
                $this->success(lang('success'));
            } else {
                $this->error(lang('error'));
            }
        }
    }
}
