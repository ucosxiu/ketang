<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/13
 * Time: 17:41
 */
namespace app\admin\controller;

//分类模块
class Articleclass extends Adminbase
{
    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    function index() {
        if (!$this->request->isAjax()) {
            //获取所有分类
            return $this->fetch();
        } else {

            $articleclass_model = model('articleclass');
            $categorys = $articleclass_model->initTree();
            echo $this->success('', '', $categorys);
            return ;
        }
    }

    function add() {
        if ($this->request->isAjax()) {
            $param = $this->request->param();

            $category_model = model('articleclass');
            if ($category_model->data($param)->allowField(true)->save()) {
                $this->success('添加成功', Url('articleclass/index'));
            }
            $this->error('添加失败');
        } else {
            $pid = $this->request->param('pid', 0, 'intval');
            $category_model = model('articleclass');

            $categorys = $category_model->getAllChildByParentId(0);
            $this->assign('categorys', $categorys);
            $this->assign('pid', $pid);
            return $this->fetch();
        }
    }

    //编辑
    function edit() {
        $id = $this->request->param('id', 0, 'intval');
        $category_model = model('articleclass');
        $category = $category_model->get($id);
        if (!$category) {
            $this->error('parameter_error');
        }

        if ($this->request->isAjax()) {
            $parentid = $this->request->param('ac_parent_id', 0, 'intval');
            if ($id == $parentid) {
                $this->error('不能选择自己作为父分类');
            }

            $param = $this->request->param();
            if ($category->data($param)->allowField(true)->save()) {
                $this->success(lang('save_success'), Url('articleclass/index'));
            }
            $this->error(lang('save_error'));
        } else {

            $categorys = $category_model->getAllChildByParentId(0);
            $this->assign('categorys', $categorys);
            $this->assign('category', $category);
            $this->assign('pid', $category['ac_parent_id']);
            return $this->fetch();
        }
    }

    //删除
    function del() {
        $id = $this->request->param('id', 0, 'intval');
        $category_model = model('articleclass');
        if ($category_model->where(['ac_id'=>$id])->delete()) {
            $this->success(lang('delete_success'));
        }
        $this->error(lang('delete_error'));
    }

    //排序
    function listorders() {
        $id = input('param.id', 0, 'intval');
        if (!$id) {
            $this->error('parameter_error');
        }

        $val = input('param.val', 0, 'intval');
        if ($val > 10000 || $val < 0) {
            $this->error('parameter_error');
        }

        $category_model = model('category');
        $data['tc_listorder'] = $val;
        $status = $category_model->allowField(true)->save($data, ['tc_id'=>$id]);

        if ($status !== false) {
            $this->success(lang('success'));
        } else {
            $this->error(lang('error'));
        }
    }

    /**
     * 设置
     */
    function setting() {
        if ($this->request->isAjax()) {
            $category = $this->request->param('category', 0, 'trim');
            $category_model = model('category');
            $category_model->recommend($category);
            $this->success(lang('success'));
        } else {
            $id = $this->request->param('id', 0, 'intval');
            $category_model = model('category');

            $categorys = $category_model->getAllChildByParentId($id);
            $this->assign('categorys', $categorys);
            return $this->fetch();
        }
    }

    /**
     * 获取子分类
     */
    function getchild() {
        $pid = $this->request->param('id', 0, 'intval');

        $category_model = model('category');
        $categorys = $category_model->getAllChildByParentId($pid);
        $this->success('', '', ['categorys' => $categorys]);
    }
}
