<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/13
 * Time: 17:41
 */
namespace app\admin\controller;

//老师模块
class Teacher extends Adminbase
{
    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    function index() {
        if (!$this->request->isAjax()) {
            //获取所有分类
            return $this->fetch();
        } else {
            $teacher_model = model('teacher');
            $where = [];
            $order = 'teacher_id desc';
            $paginate = $teacher_model->where($where)->order($order)->paginate()->toArray();
            $result = [];
            $result['code'] = 1;
            $result['msg'] = "";
            $result['count'] = $paginate['total'];
            $result['data'] = $paginate['data'];
            echo json_encode($result);
            exit;
        }
    }

    function add() {
        if ($this->request->isAjax()) {
            $param = $this->request->param();

            $teacher_model = model('teacher');
            if ($teacher_model->data($param)->allowField(true)->save()) {
                $this->success('添加成功', Url('teacher/index'));
            }
            $this->error('添加失败');
        } else {
            return $this->fetch();
        }
    }

    //编辑
    function edit() {
        $id = $this->request->param('id', 0, 'intval');
        $teacher_model = model('teacher');
        $teacher = $teacher_model->get($id);
        if (!$teacher) {
            $this->error('parameter_error');
        }

        if ($this->request->isAjax()) {
            $parentid = $this->request->param('cc_parent_id', 0, 'intval');
            if ($id == $parentid ) {
                $this->error('不能选择自己作为父分类');
            }

            $param = $this->request->param();
            if ($teacher->data($param)->allowField(true)->save()) {
                $this->success(lang('save_success'), Url('teacher/index'));
            }
            $this->error(lang('save_error'));
        } else {
            $this->assign('teacher', $teacher);
            return $this->fetch();
        }
    }

    //删除
    function del() {
        $id = $this->request->param('id', 0, 'intval');
        $teacher_model = model('teacher');
        if ($teacher_model->where(['teacher_id'=>$id])->delete()) {
            $this->success(lang('delete_success'));
        }
        $this->error(lang('delete_error'));
    }

    //排序
    function listorders() {
        $id = input('param.id', 0, 'intval');
        if (!$id) {
            $this->error('parameter_error');
        }

        $val = input('param.val', 0, 'intval');
        if ($val > 10000 || $val < 0) {
            $this->error('parameter_error');
        }

        $teacher_model = model('teacher');
        $data['tc_listorder'] = $val;
        $status = $teacher_model->allowField(true)->save($data, ['tc_id'=>$id]);

        if ($status !== false) {
            $this->success(lang('success'));
        } else {
            $this->error(lang('error'));
        }
    }

    /**
     * 设置
     */
    function setting() {
        if ($this->request->isAjax()) {
            $teacher = $this->request->param('teacher', 0, 'trim');
            $teacher_model = model('teacher');
            $teacher_model->recommend($teacher);
            $this->success(lang('success'));
        } else {
            $id = $this->request->param('id', 0, 'intval');
            $teacher_model = model('teacher');

            $teachers = $teacher_model->getAllChildByParentId($id);
            $this->assign('teachers', $teachers);
            return $this->fetch();
        }
    }

    /**
     * 获取子分类
     */
    function getchild() {
        $pid = $this->request->param('id', 0, 'intval');

        $teacher_model = model('teacher');
        $teachers = $teacher_model->getAllChildByParentId($pid);
        $this->success('', '', ['teachers' => $teachers]);
    }
}
