<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018-11-5
 * Time: 15:24
 */
namespace app\admin\controller;

//邮箱设置类
use app\common\model\MailerTemplate;
use app\common\model\Option;
use app\common\validate\MailerTemplateValidate;
use think\facade\Lang;

class Mailer extends Adminbase{
    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    function index() {
        if (!$this->request->isPost()) {
            $option = Option::getOption('smtp_setting');
            $this->assign('option', $option);
            return $this->fetch();
        } else {
            $post = array_map('trim', $this->request->param());
            if (in_array('', $post) && !empty($post['smtpsecure'])) {
                $this->error("不能留空！");
            }

            Option::setOption('smtp_setting', $post);

            $this->success(lang('success'));
        }
    }

    function templatelist() {
        if (!$this->request->isAjax()) {
            return $this->fetch();
        } else {
            $mailer_template_model = new MailerTemplate();
            $list = $mailer_template_model->order('template_id desc')->paginate()->toArray();
            $result = [];
            $result['code'] = 1;
            $result['msg'] = "";
            $result['count'] = $list['total'];
            $data = $list['data'];
            $result['data'] = $data;;
            echo json_encode($result);
        }
    }

    function add() {
        if (!$this->request->isAjax()) {
            $tpls = MailerTemplate::load_tpls();
            $this->assign('tpls', $tpls);
            return $this->fetch('adds');
        } else {
            $result = MailerTemplateValidate::validate($_POST, 'add');
            if ($result === true) {
                $mailer_template_model = new MailerTemplate($_POST);
                if ($mailer_template_model->allowField(true)->save()) {
                    $this->success(lang('success'));
                } else {
                    $this->error(lang('error'));
                }
            } else {
                $this->error($result);
            }
        }
    }

    function edit() {
        $template_id = $this->request->param('template_id', 0, 'intval');
        if (!$template_id) {
            $this->error(lang('link_error'));
        }

        $template = MailerTemplate::get($template_id);
        if (!$template) {
            $this->error('link_error');
        }

        if (!$this->request->isAjax()) {
            $tpls = MailerTemplate::load_tpls();

            $this->assign('template', $template);
            $this->assign('tpls', $tpls);
            return $this->fetch('adds');
        } else {
            $template = MailerTemplate::get(['template_code'=>$_POST['template_code']]);
            if ($template && $template['template_id'] != $template_id) {
                $this->error(lang('template_unique'));
            }
            $result = MailerTemplateValidate::validate($_POST);
            if ($result === true) {
                if (false !== $template->allowField(true)->save($_POST, ['template_id'=>$template_id])) {
                    $this->success(lang('success'));
                } else {
                    $this->error(lang('error'));
                }
            } else {
                $this->error($result);
            }
        }
    }

    function load_template() {
        if ($this->request->isAjax()) {
            $template_code = $this->request->param('tpl', '', 'trim');
            $tpl = MailerTemplate::load_tpl($template_code);
            $this->success(lang('success'), '', $tpl);
        }
    }

    function del() {
        if ($this->request->isAjax()) {
            $template_id = $this->request->param('template_id', 0, 'intval');
            if (!$template_id) {
                $this->error(lang('link_error'));
            }

            $template = MailerTemplate::get($template_id);
            if (!$template) {
                $this->error(lang('link_error'));
            }

            if ($template->delete()) {
                $this->success(lang('success'));
            } else {
                $this->error(lang('error'));
            }
        }
    }

    function test() {
        sendMail('ucosxiu_x@163.com', 'user_register', '', '', ['user_name'=> 'uuuuu', 'register_code'=> '112345']);
    }
}
